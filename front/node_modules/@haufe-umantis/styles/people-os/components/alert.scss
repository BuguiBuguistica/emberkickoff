

/// A region with important, and usually time-sensitive, information.
/// Alternatives `.success`, `.info`, `.warning` and `.error`.
/// @name Alert
/// @group components
/// @variable {Color} --umantis-alert-background [$c-black] - Background color
/// @variable {Color} --umantis-alert-info - Info color
/// @variable {Color} --umantis-alert-success - Success color
/// @variable {Color} --umantis-alert-warning - Warning color
/// @variable {Color} --umantis-alert-error - Error color
/// @example scss Success Alert
///  <umantis-alert class="success" >Success! This is positive notification.</umantis-alert>
/// @example scss Info Alert
///  <umantis-alert class="info" >All servers are now running smoothly again! Thanks.</umantis-alert>
/// @example scss Warning Alert
///  <umantis-alert class="warning" >Warning. Loading of this page taking a way too long.</umantis-alert>
/// @example scss Error Alert
///  <umantis-alert class="error" >Error. Canâ€™t connect to the platform.</umantis-alert>
///

@import '../utils/mixins/square';
@import '../variables/base';

%alertDecorator {
    @include square(20px);
    border-radius: $spacer * 5;
    content: '';
    display: inline-block;
    float: left;
    line-height: $spacer * 5;
    margin-right: $spacer * 2;
    text-align: center;
}

umantis-alert {
    background: var(--umantis-alert-background, $c-black);

    border-radius: 100px;
    color: $c-white;
    display: inline-block;
    line-height: 20px;
    padding: ($spacer * 3) ($spacer * 4);
    position: relative;
    &:before {
        background-color: $c-neutroDark;
        //var(--umantis-alert-info, $c-neutroLight);
    }
    &.info:before {
        @extend %alertDecorator;
        content: 'i';
        font-size: 18px;
        line-height: 22px;
        background-color: var(--umantis-alert-info);
    }
    &.success:before {
        @extend %alertDecorator;
        content: '\2714';
        line-height: 21px;
        background-color: var(--umantis-alert-success);
    }
    &.warning:before {
        @extend %alertDecorator;
        content: '!';
        font-size: 18px;
        line-height: 22px;
        background-color: var(--umantis-alert-warning);
    }
    &.error:before {
        @extend %alertDecorator;
        content: '+';
        transform: rotate(45deg);
        font-size: 20px;
        background-color: var(--umantis-alert-error);
    }
}

// WAI-ARIA specification and examples
// https://www.w3.org/TR/wai-aria-1.1/#alert


umantis-alert {
    border-radius: 100px;
    box-shadow: 0 2px 10px 0 rgba(66, 82, 92, 0.25);
    color: $c-white;
    font-size: 14px;
    font-weight: 600;
    --umantis-alert-background: $c-neutroDarker;
    --umantis-alert-info: $c-semanticInfo;
    --umantis-alert-success: $c-semanticSuccess;
    --umantis-alert-warning: $c-semanticWarning;
    --umantis-alert-error: $c-semanticError;
}

// WAI-ARIA specification and examples
// https://www.w3.org/TR/wai-aria-1.1/#alert