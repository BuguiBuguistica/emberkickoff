/**
* Text button:
* Use `.text-button` class. Default one use application white/neutral colors.
* For main form actions (save, edit, etc) use `.text-button.text-button--main`, that one use primary application colors.
* Focus and disable respond to `:focus` and `:disable` respectively;
* but also you can use `.text-button.is-focus` and `.text-button.is-disable`.
*
*     @example
*     <button class="text-button">Subtle</button>
*     <button class="text-button is-focus">Subtle</button>
*     <button class="text-button is-hover">Subtle</button>
*     <button class="text-button" aria-disabled="true">Subtle</button>
*     <button class="text-button text-button--main">Subtle sec</button>
*     <button class="text-button text-button--main is-focus">Subtle sec</button>
*     <button class="text-button text-button--main is-hover">Subtle sec</button>
*     <button class="text-button text-button--main" aria-disabled="true">Subtle sec</button>
*/

.text-button {
	@include typo(button);
	background-color: transparent;
	border: 2px solid transparent;
	border-radius: $button-radius;
	cursor: pointer;
	padding: $button-v-padding - 2px $button-h-padding - 2px;
	transition: color ease-in-out .3s, background-color ease-in-out .3s;
	&:focus,
	&.is-focus {
		border: 2px solid $c-focus;
	}
	&:hover,
	&.is-hover {
		background-color: $c-neutroLight;
		color: $c-primary;
	}
	&:disabled,
	&.is-disable,
	&[aria-disabled="true"] {
		opacity: .5;
		pointer-events: none;
	}
	&--main {
		color: $c-primary;
		&:hover,
		&.is-hover {
			color: $c-primaryDark;
		}
	}
}