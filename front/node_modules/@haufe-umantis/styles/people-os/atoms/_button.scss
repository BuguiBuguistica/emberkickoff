/**
 * Button:
 * Use `.button` class. Default one use application white/neutral colors.
 * For main form actions (save, edit, etc) use `.button.button--main`, that one use primary application colors.
 * For alternative button use `.button.alternative`, that one use secondary application colors.
 * Focus and disable respond to `:focus` and `:disable` respectively;
 * but also you can use `.button.is-focus` and `.button.is-disable`.
 *
 *     @example
 *     <button class="button">Cancel</button>
 *     <button class="button is-focus">Cancel</button>
 *     <button class="button is-hover">Cancel</button>
 *     <button class="button" aria-disabled="true">Cancel</button>
 *     <button class="button is-loading"><i></i><i></i><i></i></button><br/><br/>
 *     <button class="button button--main">Save</button>
 *     <button class="button button--main is-focus">Save</button>
 *     <button class="button button--main is-hover">Save</button>
 *     <button class="button button--main" aria-disabled="true">Save</button>
 *     <button class="button button--main is-loading"><i></i><i></i><i></i></button><br/><br/>
 *     <button class="button button--alternative">Complete</button>
 *     <button class="button button--alternative is-focus">Complete</button>
 *     <button class="button button--alternative is-hover">Complete</button>
 *     <button class="button button--alternative" aria-disabled="true">Complete</button>
 *     <button class="button button--alternative is-loading"><i></i><i></i><i></i></button><br/><br/>
 *     <button class="button button--error">danger</button>
 *     <button class="button button--error is-focus">danger</button>
 *     <button class="button button--error is-hover">danger</button>
 *     <button class="button button--error" aria-disabled="true">danger</button>
 *     <button class="button button--error is-loading"><i></i><i></i><i></i></button><br/><br/>
 *     <button class="button button small">Cancel</button>
 *     <button class="button button--main small">Save</button>
 *     <button class="button button--alternative small">Complete</button>
 *     <button class="button button--error small">danger</button>
 *     <button class="button button small is-loading"><i></i><i></i><i></i></button><br/>
 *     <div role="button button--download"><icon></icon><span>pdf</span></div><br/>
 *     <button class="button button--rounded"><icon></icon></button>
 */
@import "../../people-os/utils/mixins/shapes";

@keyframes loading {
	0% {
		opacity: .6;
		transform: scale(0.8);
	}
	50% {
		opacity: .8;
	}
	100% {
		opacity: 1;
		transform: scale(1);
	}
}

@mixin dot-animation {
	@include square(4px);
	animation: {
		direction: alternate;
		duration: .8s;
		fill-mode: none;
		iteration-count: infinite;
		name: loading;
		play-state: running;
		timing-function: ease-out;
	}
	border-radius: 100%;
	display: block;
	margin: 0 1px;
}

$button-border-width: 1px;
@mixin button-structure($is-small: false, $is-focus: false, $has-border: false) {
	$v-padding: $button-v-padding;
	$h-padding: $button-h-padding;
	@if $is-small {
		$v-padding: $v-padding/3;
		$h-padding: $h-padding/2;
	}
	@if $is-focus {
		$v-padding: $v-padding - 2px;
		$h-padding: $h-padding - 2px;
		border-color: $c-focus;
		border-width: $button-border-width * 2;
	}
	@if $has-border {
		$v-padding: $v-padding - 1px;
		$h-padding: $h-padding - 1px;
		border-width: $button-border-width;
	}
	padding: $v-padding $h-padding;
}

.button {
	@include button-structure(false, false, true);
	@include typo(button);
	color: $c-neutroDark; // default color
	appearance: none;
	background: $c-white;
	border: {
		color: $c-neutro;
		radius: $button-radius;
		style: solid;
	}
	box-shadow: $button-shadow;
	cursor: pointer;
	display: inline-block;
	transition: background ease-in-out .3s;
	&.small {
		@include button-structure(true, false, true);
	}
	&:focus,
	&.is-focus {
		@include button-structure(false, true, false);
		&.small {
			@include button-structure(true, true, false);
		}
	}
	&:disabled,
	&.is-disable,
	&[aria-disabled="true"] {
		&,
		&:hover,
		&.is-hover {
			border-color: transparent;
			cursor: not-allowed;
			opacity: .5;
		}
	}
	&.is-loading {
		cursor: progress;
		display: inline-flex;
		height: $button-height;
		justify-content: center;
		&.small {
			height: $button-small-height;
		}
		i {
			@include dot-animation;
			animation-delay: .1s;
			background: $c-neutroDark;
			margin: 0 5px;
			&:first-child {
				animation-delay: 0s;
				margin: 0;
			}
			&:last-child {
				animation-delay: .2s;
				margin: 0;
			}
		}
	}
	&--download {
		display: flex;
		span {
			// file extension name
			background: $c-red;
			color: $c-white;
			font: {
				size: 8px;
				weight: bold;
			}
			margin-left: ($spacer * 2);
			padding: 0 $spacer;
			text-transform: uppercase;
		}
	}
	&--rounded {
		align-items: center;
		border-color: $c-white;
		display: inline-flex;
		border-radius: 50%;
		height: cell(10);
		justify-content: center;
		padding: cell(2);
		width: cell(10);
		umantis-icon {
			height: cell(6);
			width: cell(6);
		}
		&:hover,
		&.is-hover {
			border-color: $c-white;
			umantis-icon svg g {
				stroke: $c-primary;
			}
		}
		&:focus,
		&.is-focus {
			padding: 7px;
		}
	}
}

$buttons: ((main, $c-white, $c-primary, $c-white, $c-primaryDark), (secondary, $c-neutroDark, $c-white, $c-primary, $c-white), (alternative, $c-white, $c-semanticSuccess, $c-white, $c-semanticSuccessDark), (error, $c-white, $c-semanticError, $c-white, $c-semanticErrorDark),);
$all: '';
@each $b in $buttons {
	$type: nth($b, 1);
	$c: nth($b, 2);
	$bg: nth($b, 3);
	$c-hover: nth($b, 4);
	$bg-hover: nth($b, 5);
	.button.button--#{$type} {
		background: $bg;
		border-color: transparent;
		color: $c;
		margin: 1px;
		&:hover,
		&.is-hover {
			background: $bg-hover;
			border-color: transparent;
			color: $c-hover;
		}
		&:focus,
		&.is-focus {
			@include button-structure(false, true, false);
			&.small {
				@include button-structure(true, true, false);
			}
		}
		&[disabled],
		&.is-disable,
		&[aria-disabled="true"] {
			&:hover,
			&.is-hover {
				background: $bg;
				border-color: transparent;
				color: $c;
				cursor: not-allowed;
			}
		}
		&.is-loading {
			i {
				background: $c;
			}
		}
	}
	$all: $all+".button.button--#{$type}, ";
}

#{$all} {
	&[disabled],
	&.is-disable,
	&[aria-disabled="true"] {
		opacity: .5;
	}
}