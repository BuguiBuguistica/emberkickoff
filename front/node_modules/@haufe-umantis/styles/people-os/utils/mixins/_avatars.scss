// Avatar mixins

@mixin gAvatarBase() {
  align-items: center;
  background-color: $c-neutroLight;
  border-radius: 50%;
  border: 1px solid $c-neutroDark;
  color: $c-neutroDarker;
  display: flex;
  justify-content: center;
  text-transform: uppercase;
  &[style] { // has a background as inline style
    border-color: $c-white;
    font-size: 0;
  }
}

@mixin gAvatarMore() {
  color: $c-blue;
  cursor: pointer;
  border-color: $c-blue;
}

@mixin gAvatarSize($size) {
  $avatar: map-get($avatars, $size);
  $dimension: map-get($avatar, dimension);
  background-size: #{$dimension}px;
  height: #{$dimension}px;
  width: #{$dimension}px;
  font-size: #{map-get($avatar, font-size)};
  font-weight: #{map-get($avatar, font-weight)};
}

// generate Avatar
// requires $avatars variable
@mixin gAvatar($size: s) {
  $valid-sizes: 's | m | l | xl';
  @if map-has-key($avatars, $size) {
    @include gAvatarBase();
    @include gAvatarSize($size);
  } @else {
    @error "Avatar sizes supported are: #{$valid-sizes}";
  }
}

@mixin gAvatarGroup($size: s, $avatar-container: li) {
  @if map-has-key($avatars, $size) {
    $dimension: map-get(map-get($avatars, $size), dimension);
    display: flex;
    flex-direction: row;
    #{$avatar-container}:not(:first-child) {
      .avatar {
        margin-left: #{( - $dimension / 4 )}px;
      }
    }
  } @else {
    @error "Avatar sizes supported are: #{$valid-sizes}";
  }
}